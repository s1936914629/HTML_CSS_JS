.box1{
    .box2{
        color:red;
    }

    >.box3{
        color:red;

        &:hover{
            color:blue;
        }
    }

    //为box1设置一个hover
    // &就表示外层的父元素

    &:hover{
        color: bisque;
    }

    div &{
        width: 100px;
    }
}

.p1{
    width: 100px;
    height: 200px;
}

//:extend(.p1)对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color:red;
}

.p3{
    // 直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行了赋值
    // mixin混合
    .p1();
}

.p4(){
    width: 100px;
    height: 100px;
}

.p5{
    .p4;
}

//混合函数  在混合函数中可以直接设置变量

.test(@w:100px,@h:200px,@bg-color:red){
    width: @w;
    height: @h;
    border:1px solid @bg-color;
}

div{
    // 调用混合函数，按顺序传递参数
    // .test(200px,300px,#bfa);
    .test(300px);
    // .test(@bg-color:red, @h:100px, @w:300px);
}

span{
    color: average(red,blue);
}

html{
    width: 100%;
    height: 100%; 
}
body {
    width: 100%;
    height: 100%;
    background-color: #bfa;
}

body:hover{
    background-color: darken(#bfa,50%);
}